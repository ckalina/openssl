=pod

=head1 NAME

CRYPTO_SIGNAL_block, CRYPTO_SIGNAL_block_set, CRYPTO_SIGNAL_unblock_all
- signal management functions

=head1 SYNOPSIS

 #include <openssl/crypto.h>

 int CRYPTO_SIGNAL_block(CRYPTO_SIGNAL *p);
 int CRYPTO_SIGNAL_block_set(CRYPTO_SIGNAL** props);
 int CRYPTO_SIGNAL_unblock_all(void);

=head1 DESCRIPTION

OpenSSL implements signal masking for use (among others) in multi-threaded
use-cases. Currently UNIX-based and Windows platforms are supported, only.

These function use B<CRYPTO_SIGNAL> structure to specify signal and callback
details.

To mask multiple signals, pass a NULL-terminated array to
B<CRYPTO_SIGNAL_block_set>.

On Windows, this is restricted to applications using the Console API.

=head1 RETURN VALUES

All functions return 1 on success, 0 otherwise. On unsupported platforms 0 is
returned.

=head1 EXAMPLES

    #include <stdio.h>

    #ifdef _WIN32
    # include <windows.h>
    long s = CTRL_C_EVENT;
    #else
    # include <unistd.h>
    # include <signal.h>
    long s = SIGINT;
    #endif

    #include <openssl/crypto.h>

    void cb(int sig) {
        static int count = 0;
        printf("Caught signal: %d\n", sig);
        printf("Total number of signals caught: %d\n", count++);
    }

    int main(void)
    {
        int counter = 0;
        CRYPTO_SIGNAL sig;

        sig.signal = s;
        sig.callback = cb;

        CRYPTO_SIGNAL_block(&sig);

        while(counter++ < 10) {
            sleep(1);
        }
        return 0;
    }

=head1 COPYRIGHT

Copyright 2019 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the Apache License 2.0 (the "License").You may not use
this file except in compliance with the License.You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
